useMemo()

-En react, regularmente para hacer un filtro, al componente que sea Lista le pasamos
  como lista que va a renderizar una variable.
-Esta variable tendrá como valor el filtro completo.
-Haciendo esto, cada vez que cambiemos los valores el input, como está renderizando todo
  de nuevo, hará que se filtren los valores, con solo cambiar el input, sin un boton.
-Para dar utilidad al boton de busqueda, creamos un estado, y este es el que validamos 
  dentro del includes. En el click del boton, colocamos ese estado, dandole como valor lo
  que está en el input.
-Pero esto tiene el problema de que la función del filtro se sigue ejecutando, aunque no 
  filtra nada porque ahora validamos lo que está en el estado.
-Para corregir esto existe useMemo.

useMemo()
  -Hara que una función se ejecute solamente sí alguno de los valores a validar cambia.
  -Su sintaxis es similar al useEffect, donde los valores a validar se colocan en un array
    en el segundo parametro.
  -La función del use memo lo que debe retornar es lo que hacia anteriormente la función del
    filtro, pero no llamar la función en sí, sino que aquí se define desde el inicio.
  -Esto hará que dicha función se ejecute siempre que los valores del 2do parametro cambie
    alguno su valor.
  -La función que será el proceso siempre debe retornar algo.

-Su reestriccion de uso es la misma que con memo(), y tambien sus condiciones.